第16章 控制脚本

本章内容

处理信号
以后台模式运行脚本
禁止挂起
作业控制
修改脚本优先级
脚本执行自动化


目前，运行脚本的唯一方式就是以实时模式在命令行界面上直接运行。
还有其他控制脚本方法。这些控制方法包括向脚本发送信号，修改脚本的优先级以及在脚本运行时切换到运行模式

16.1  处理信号

linux利用信号与运行在系统中的进程进行通信。可以通过对脚本进行编程，使其在收到特定信号时执行某些命令，从而控制shell脚本的操作

16.1.1  重温linux信号

linux信号和应用程序可以生成超过30个信号


linux常用信号

信号            值           描述
1            SIGHUP       挂起进程
2           SIGINT            终止进程
3            SIGUIT           停止进程
9            SIGKILL          无条件终止进程
15            SIGERM            尽可能终止进程
17            SIGSTOP           无条件停止进程，但不是终止进程
18           SIGSTP           停止或暂停进程，但不终止进程
19           SIGCONT           继续运行停止的进程


默认情况下，bash shell会忽略收到的任何SIGUIT(3)和SIGERM(5)(所以，交互式shell下才不会被意外终止)
但是，bash shell会处理收到的SIGHUP(1)和SIGINT(2)信号

如果bash shell收到SIGHUP信号，比如当你要离开一个交互式shell，它就会退出。但在退出之前，它会将SIGHUP信号传给所有由该shell所启动的进程(包括正在运行的shell脚本)

通过SIGINT信号，可以中断shell.linux内核会停止为shell分配CPU处理时间。这种情况发生时，shell会将SIGINT信号传给所有由它所启动的进程，以此告知出现的状况

shell会将这些信号传给shell脚本程序来处理。而shell脚本的默认行为是忽略这些信号。它们可能会不利于脚本的运行。要避免这种情况，你可以脚本中加入识别信号的代码，并执行命令来处理信号


16.1.2  生成信号

bash shell允许用键盘上的组合键申城两个基本的linux信号。这个特性在需要停止或暂停失控程序时非常方便

