
第5章 理解shell


本章内容
探究shell的类型
理解shell的父/子关系
子shell用法
探究内建的shell命令

5.1 shell类型

系统启动什么样的shell程序取决于你个人的用户ID配置。在/etc/passwd文件中，在用户ID记录的第7个字段中列出了默认的shell程序
只要用户登录到某个虚拟控制台终端或是在GUI中启动终端仿真器，默认的shell程序就会开始运行


bash shell程序位于/bin目录内。从长列表中可以看出/bin/bash (bash shell)是一个可执行程序

ls -lF /bin/bash


默认的交互shell会在用户登录某个虚拟控制台终端或在GUI中运行轴端仿真器时启动。
还有一个默认shell是/bin/sh,它作为默认的系统shell，用于那些需要在启动时使用的系统shell脚本。
一些发行版使用软链接将默认的系统shell设置成bash shell

/bin/dash  来启动dash shell
exit 退出dash shell


5.2  shell的父子关系

用于登录某个虚拟控制器终端或在GUI中运行终端仿真其时启动的默认的交互shell，是一个父shell.
本书到目前为止都是父shell提供GLI提示符，然后等待命令输入

在CLI提示符后输入  /bin/bash命令或其他等效的dash命令时，会创建一个新的shell程序。这个shell程序被称为子shell（child shell）。子shell也拥有CLI提示符，

ps -f 用于查看

注意，进程就是正在运行的陈旭。bash shell是一个程序，当它运行的时候，就成为了一个进程。一个运行着的shell就是某种进程而已。在说道运行一个bash shell的时候，会将shell和进程两个词互换


在生成子shell进程时，只有部分父进程的环境被复制到子shell环境中。这都会对包含变量在内的一些东西造成影响


子shell(child shell,也叫subshell)可以从父shell中创建，也可以从另一个子shell中创建

ps --forest命令展示子shell的嵌套结构

ps -f 命令要能够表现子shell的嵌套关系，因为它能够通过PPID列显示出谁是谁的父进程

bash shell程序可使用命令行参数修改shell启动方式

可以输入 man bash 获得关于bash的帮助信息

exit命令不仅能退出子shell,还能用来登出当前的虚拟控制台终端或终端仿真器软件。只需要在父shell中输入exit,就能
够退出CLI


运行shell脚本也能够创建出子shell。就算不使用bash shell命令或是运行shell脚本，也可以生成子shell。一种方法就是使用进程列表

5.2.1  进程列表
可以在一行中指定要依次运行的一系列命令。这可以通过命令列表来实现，只需要在命令之间加入分号(;)即可

pwd;ls;cd /etc;pwd;cd;pwd;ls

上面的命令不是进程列表。命令列表要想成为进程列表，这些命令必须包含在括号里

(pwd;ls;cd /etc;pwd;cd;pwd;ls)

括号的加入使得命令列表变成了进程列表，生成了一个子shell来执行对应的命令

说明，进程列表是一种命令分组(command grouping).另一种命令分组是将命令放入花括号中。并在命令列表尾部加上分号(;)
语法为{ command;}使用花括号进行命令分组并不会像进程列表那样创建出子shell


要想知道是否是否生成了子shell,要借助一个使用了环境变量的命令
echo $BASH_SUBSHELL，如果该命令返回0，就表明没有子shell.如果返回1或更大的数字，就表明 存在子shell


pwd;ls;cd /etc;pwd;cd;pwd;ls;echo $BASH_SUBSHELL


(pwd;ls;cd /etc;pwd;cd;pwd;ls;echo $BASH_SUBSHELL)

命令列表就是使用括号包围起来的一组命令，它能够创建出子shell来执行这些命令
甚至可以在命令列表中嵌套括号来创建子shell的子shell

(pwd;echo $BASH_SUBSHELL)


(pwd;(echo $BASH_SUBSHELL))


在shell脚本中，经常使用子shell进行多进程处理。它并非真正的多进程处理，因为终端控制着子shell的I/O

5.2.2  别出心裁的子shell用法

在交互式的shell GLI中，还有很多子shell用法。进程列表，协程和管道都利用了子shell。它们都可以有效地在交互式shell中使用

在交互式shell中，一个高效的子shell用法就是使用后台模式。

1.探索后台模式

sleep 时间

要想将命令置入后台模式，可以在命令末尾加上字符&.把sleep命令置入后台模式可以让我们利用ps测试

ps命令用来显示各种进程。还可以使用jobs来显示后台作业信息。jobs命令可以显示出当前运行在后台模式中的所有用户的进程(作业)

jobs命令在方括号中显示出作业号(1)(数字1).它还显示了作业的当前状态(running)以及对应的命令

利用jobs的-l(字母) 可以显示出命令的PID


注意， 后台作业的结束状态可未必会一直等待到合适的时候才现身

后台模式很方便，可以让我们在CLI中创建出有实用价值的子shell

2. 将进程列表置入后台

进程列表是运行在子shell中的一条或多条命令。使用包含了sleep命令的进程列表，并显示出变量BASH_SUBSHELL,

(sleep 2 ; echo $BASH_SUBSHELL; sleep 2)


将相同的进程列表置入后台模式会在命令输出上表现不同。把进程列表置入后台会产生一个作业号和进程ID,然后返回到提示符。

在CLI中运用子shell的创造性方法之一就是将进程列表置入后台模式。在子shell中处理工作，同时也不会让子shell的I/O受制于终端

使用tar 创建备份是有效利用后台进程列表的一个实用的例子

将进程列表置入后台模式并不是子shell在CLI中仅有的创造性用法。协程就是另一种方法

3. 协程

协程可以同时做两件事。它在后台生成一个子shell，并在这个子shell中执行命令

要进行协程处理，要使用coproc命令，还有要在子shell中执行的命令

coproc sleep 6

除了会创建子shell之外，协程基本上就是将命令置入后台模式。当输入coproc命令及其参数之后，就可以发现启用了一个
后台作业。屏幕上会显示出后台作业号(1)以及进程ID(2544)

jobs 能够显示出协程的处理状态

COPROC是coproc命令给进程起的名字

coproc My_Job { sleep 10;}

通过使用扩展语法，协程的名字被设置成My_Job.扩展语法必须确保在第一个花括号({) 和命令之间有一个空格。还必须保证命令以分号(;)结尾.  另外，分号和闭花括号(})之间也得有一个空格

协程能够让你发挥想象力，发送或接收来自子shell中进程的信息。只有在拥有多个协程的时候才需要对协程进行命名，因为你得和它们进行通信

将协程和进程列表结合起来产生嵌套的子shell。只需要输入进程列表，然后把命令coproc放在前面即可


coproc ( sleep 10; sleep 20)

5.3 理解shell 的内建命令

内建命令和非内建命令有很大不同


5.3.1 外部命令


外部命令，有时被称为文件系统命令，是存在于bash shell之外的程序，它们并不是shell程序的一部分。外部命令程序
通常位于/bin, /usr/bin/  /sbin 或 usr/sbin中
ps就是一个外部命令，可以使用which或type命令找到它

当外部命令执行时，会创建出一个子进程，这种操作被称为衍生(forking)
外部命令ps很方面显示出它的父进程以及自己多对应的衍生子进程


作为外部命令，ps命令执行时会创建出一个子进程。

当进程必须执行衍生操作时，它需要花费时间和精力来设置新子进程的环境。所以说，外部命令多少还是有代价的

说明，就算衍生出子进程或是创建了子进程子shell,你仍然可以通过发送信号与其沟通
这一点无论是在命令行还是在脚本编写中都很有用
发送信号(signaling)使得进程间可以通过信号进行通信


5.3.2  内建命令


内建命令和外部命令的区别在于前者不需要使用子进程来执行。它们已经和shell编译成了一体，
作为shell工具的组成部分存在。不需要借助外部程序文件来运行

cd 和exit命令都内建与bash shell.可以利用type命令来了解某个命令是否是内建的


因为既不需要通过衍生出子进程来执行，也不需要打开程序文件，内建命令的执行速度要更快，效率更高


也有特例，例如echo和pwd既有内建命令也有外部命令，两种实现策略也有不同。

要查看命令的不同实现，使用type命令的-a选项


type -a echo

which echo 

type -a pwd

which pwd

要使用外部命令 pwd, 可以输入 /bin/pwd


1. 使用history命令

一个有用的内建命令是history,bash shell会跟踪你用过的命令


可以设置保存在bash历史记录中的命令数。需要改名为HISTSIZE的环境变量

!! 返回刚在的命令

命令历史记录被保存在隐藏文件.bash_history中，它位于用户的主目录中
bash命令的历史记录是先放在内存中，当shell退出时才被写入到历史文件中

可以在退出shell会话之前强制将命令历史记录写入.bash_history中。要实现强制写入
需要使用history命令的-a选项


要想强制重新获取.bash_history文件，更新终端会话的历史记录，可以使用history -n选项

!编号  就可以换回历史列表中的一条命令


使用bash shell命令历史记录能够大大节省时间

2. 命令别名


alias命令是一个shell的内建命令。命令别名允许你为常用的命令(及其参数)创建另一个名称，
从而将输入量减少

alias -p


可以使用alias命令创建属于自己的别名
alias li='ls -li'


因为命令别名属于内部命令，一个别名仅在它所被定义的shell进程中才有效



