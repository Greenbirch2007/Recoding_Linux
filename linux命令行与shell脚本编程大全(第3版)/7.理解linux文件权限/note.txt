第7章 理解linux文件权限

本章内容

理解linux的安全性
解读文件权限
使用Linux

缺乏安全性的系统不是完整的系统。系统中必须有一套能够保护文件免遭非授权用户浏览或修改的机制

Linux沿用了Unix文件权限的办法，即允许用户和组根据每个文件和目录的安全性设置来访问文件。


7.1 linux的安全性

Linux安全系统的核心是用户账户。每个能进入Linux系统的用户都会被分配唯一的用户账号。
用户对系统中各种对象的访问权限取决于它们登录系统时用的账户

用户权限是通过创建用户时分配的用户ID(User ID,通常缩写为UID)来跟踪的。
UID是数值，每个用户都有唯一的UID，但在登录系统时用的不是UID,而是登录名。
登录名是用户用来登录系统的最长八字符的字符串(字符可以是数字或字母)，同时会关联一个对应的密码

linux系统使用特定的文件和工具来跟踪和管理系统上的用户账户。

7.1.1  /etc/passwd文件

linux系统使用一个专门的文件来将用户的登录名匹配到对应的UID值。这个文件就是/etc/passwd文件，它包含了一些与用户有关的信息。

cat /etc/passwd

roor用户账户是Linux系统的管理员，固定分配给它的UID是0.
Linux系统会为各种各样的功能创建不同的用户账户，而这些账户并不是真正的用户。这些账户叫做系统账户，
是系统上运行的各种服务进程访问资源用的特殊账户。
所有运行在后台的服务都需要用一个系统用户账户登录到Linux系统上

Linux为系统账户预留了500以下的UID值。有些服务甚至要用特定的UID才能正常工作
普通用户创建账户时，大多数Linux系统会从500开始，将第一个可用UID分配给这个账户

现在，绝大多数linux系统都将用户密码保存在另一个单独的文件中(叫做shadow文件，位置在/etc/shadow)
只有特定的程序(比如登录程序)才能访问这个文件

/etc/passwd是一个标准的文本文件

7.1.2  /etc/shadow文件

/etc/shadow文件对linux系统密码管理提供了更多的控制。只有root用户才能访问/etc/shadow文件，这让
它比起/etc/passwd安全许多

/etc/passwd文件为系统上的每个用户账户都保存了一条记录

使用shadow密码系统后，Linux系统可以更好地控制用户密码。它可以控制用户多久更改一次密码，以及什么
时候禁用该用户账户，如果密码未更新的话

7.1.3  添加新用户


用来向Linux系统添加新用户的主要工具是useradd.
这个命令可以一次性创建新用户账户及设置用户HOME目录结构。useradd命令使用系统的默认值以及命令行参数
来设置用户账户。系统默认值被设置在/etc/default/useradd文件中。可以使用加入了 -D选项的useradd命令查看所用Linux系统中的这些默认值

在创建新用户时，如果你不在命令行中指定具体的值，useradd命令就会使用-D选项所显示的那些默认值。

它们是bash shell环境的标准启动文件。系统会自动将这些默认文件复制到你创建的每个用户的HOME目录

可以用默认系统参数创建一个新用户账户，然后检查检查一下新用户的HOME目录

useradd -m test

ls -al /home/test

默认情况下,useradd命令不会创建HOME目录，但是-m命令行选项会使其创建HOME目录。
useradd 命令创建了新HOME目录，并将/etc/skel目录中的文件复制过来

说明，运行本章中的用户账户管理命令，需要以root用户账户登录或通过sudo命令以root用户账户身份运行
这些命令


要想在创建用户时改变默认值或默认行为，可以使用命令行参数

注意，在创建新用户账户时使用命令行参数可以更改系统指定的默认值。但如果总需要修改某个值的话，
最好还是修改一下系统的默认值

可以在-D选型后跟上一个指定的值来修改系统默认的新用户设置


useradd命令会将tsch shell作为所有新建用户的默认登录shell


7.1.4  删除用户

如果想从系统中删除用户，userdel可以满足这个需求。默认情况下，userdel命令会只删除/etc/passwd文件中的用户信息，而不会删除系统中属于该账户的任何文件。


如果加上-r参数，useradd会删除用户的HOME目录以及邮件目录，然而，系统上仍可能存有已删除用户的其他文件。

7.1.5 修改用户

Linux听了一些不同的工具来修改已有用户账户的信息


1.usermod

usermod命令是用户账户修改工具中最强大的一个。它能用来修改/etc/passwd文件中的大部分字段，
只需用与想修改的字段对应的命令行参数就可以了。参数大部分跟useradd命令的参数一样(比如，-c修改备注字段，-e修改过期日期，-g修改默认的登录组)

-L选项可以将账户锁定，使用户无法登录，同时无需删除账户和用户的数据。
要让账户恢复正常，只要用-U选项即可


2. passwd和chpasswd

改变用户密码的一个简便方法就是用passwd命令

如果之用passwd命令，它会修改你的密码。系统上的任何用户都能改自己的密码，但只有root用户才
有权限更改别人的密码

-e选型能强制用户下次登录时修改密码。你可以先给个用户设置一个简单的密码，之后再强制在下次登录时改成他们能记住的更复杂的密码

如果需要为系统中的大量用户修改密码。使用chpasswd命令。chpasswd命令能从标准输入自动读取登录名和密码对(由冒号分割)列表，给密码加密，然后为用户账户设置，
你也可以用重定向命令来将含有userid:passwd对的文件重定向给该命令

3. chsh,chfn和chage

chsh,chfn和chage工具专门用来修改特定的账户信息。
chsh命令用来快速修改默认的用户登录shell.使用时必须用shell的全路径名作为参数，不能只用shell名

chsh -s /bin/csh t

chfn命令提供了在/etc/passwd文件的备注字段中存储信息的标准方法。
chfn命令会将用于Unix的finger命令的信息存进备注字段，而不是简单地存入一些随机文本(比如名字或昵称之类的)，或是将备注字段留空。
finger命令可以非常方便地查看Linux系统上的用户信息
如果在使用chfn命令时没有参数，它会向你询问要将哪些适合的内容加进备注字段

所有的指纹信息现在都存在/etc/passwd文件中了

最后，chage命令用来帮助管理用户账户的有效期。你需要对每个值设置多个参数，

7.2  使用linux组


用户账户在控制单个用户安全性方面很好用，
linux系统采用的另一个安全概念--组(group)

组权限允许多个用户对系统中的对象(比如文件，目录和设备等)共享一组公用的权限。

每个组都有唯一的GID--跟UID类似，在系统上 这是唯一的数值。除了GID，每个组还有唯一的组名。Linux
系统上有一些组工具可以创建和管理你自己的组。

7.2.1  /etc/group文件


与用户账户类似，组信息也保存在系统的一个文件中。/etc/group文件包含系统上用到的每个组的信息。

/etc/group文件有4个字段：
1.组名 2. 组密码  3. GID 4.属于改组的用户列表

组密码允许非组内成员通过它临时成为该组成员。

千万不要通过直接修改/etc/group文件来添加用户到一个组，要用usermod命令。
在添加用户到不同的组之前，首先地创建组

说明，当一个用户在/etc/passwd文件中指定某个组作为默认组时，用户账户不会作为该组成员
再出现在/etc/group文件中


7.2.2  创建数组

groupadd 命令可以在系统上创建新组

/usr/sbin/groupadd shared
tail /etc/group

在创建新组时，默认没有用户被分配到该组。groupadd命令没有提供将用户添加到组中的选项，
但是可以用usermod来处理


/usr/sbin/usermod -G shared rich
/usr/sbin/usermod -G shared test

tail /etc/group

shared组现在有两个成员：test和rich。usermod命令的-G选项会把这个新组添加到该用户账户的
组列表里

说明，如果更改了已经登录系统账户所属的用户组，该用户必须登出系统后再登录，组关系的更改才能生效

警告，为用户账户分配组时要格外小心。如果加了-g选项，指定的组名会替换掉该账户的默认组。
-G选项将该组添加到用户的属组的列表里，不会影响默认组


7.2.3  修改组

在/etc/group文件中可以看到，需要修改的组信息不多。groupmod命令可以修改已经有组的GID(加-g选项)
或组名(加-n选项)

groupmod -n sharing shared

修改组名时，GID和组成员不会变，只有组名改变。由于所有的安全权限都是基于GID的，你可以随意改变
组名而不会影响文件的安全性


7.3  理解文件权限

7.3.1  使用文件权限符

ls -l可以用来查看linux系统上的文件，目录和设备的权限

输出的结果第一个字段就是描述文件和目录权限的编码。
-代表文件
d代表目录
l代表链接
c代表字符型设备
b代表块设备
n代表网络设备

之后有3组三字符的编码。每一组定义了3中访问权限

r代表对象是可读的
w代表对象是可写的
x代表对象是可执行的

这3组权限分别对应对象的3个安全级别

1.对象的属主
2.对象的属组
3.系统其他用户


7.3.2  默认文件权限


umask命令是用来设置所创建文件和目录额默认权限

touch命令用分配给我的用户账户的默认权限创建了这个文件。umask命令可以显示和设置这个默认权限

7.4 改变安全性设置

7.4.1  改变权限

chmod命令用来改变文件和目录的安全性设置

chmod options mode file

mode参数可以使用八进制模式或符号模式进行安全型设置

chmod 760 newfile

X:如果对象是目录或它已有执行权限，赋予执行权限
s:运行时重新设置UID或GID
t:保留文件或目录
u:将权限设置为跟属主一样
g:将权限设置为跟属组一样
o:将权限设置为跟其他用户一样


chmod o+r newfile
-R选项可以让权限的改变递归地作用到文件和子目录。你可以使用通配符指定多个文件，
然后利用一条命令将权限更改应用到这些文件上

7.4.2  改变所属关系

有时你需要改变文件的属主，比如有人离职或开发人员创建了一个在产品环境中需要归属在系统账户下的
应用。Linux提供了两个命令来实现这个功能：
chown命令用来改变文件的属主，
chgrp命令用来改变文件的默认属组


chown options owner[.group] file


可以用登录名或UID来指定文件的新属主

chown命令也可以同时改变文件的属主和属组


可以只改变一个目录的默认属组

chown .rich newfile

最后，如果你的Linux系统采用和用户登录名匹配的组名，可以只用一个条目就改变二者


chown test. newfile

chown命令采用一些不同的选项参数。-R选项配合通配符可以递归地改变子目录和文件的所属关系。
-h选项可以改变该文件的所有符号链接文件的所属关系

说明，只有root用户能够改变文件的属主。任何属主都可以改变文件的属组，但前提是属主必须
是原属组和目标属组的成员


chgrp命令可以更改文件或目录的默认属组

chgrp sharing newfile 

用户账户必须是这个文件的属主，除了能够更换属组之外，还得是新组的成员。现在sharing组的任意一个
成员都可以写这个文件了。这是linux共享文件的一个途径。然而，在系统中给一组用户共享文件也会变得很复杂

7.5 共享文件


linux系统上共享文件的方法是创建组。但在一个完整的共享文件的环境中，就比较赋值


创建新文件时，Linux会用你默认的UID和GID给文件分配权限。想让其他人也能访问文件，要么改变其他用户
所在安全组的访问权限，要么就给文件分配一个包含其他用户的新默认属组

如果你想在大范围环境中创建文档并将文档与人共享，


linux还为每个文件和目录存储了3个额外的信息位

1.设置用户ID(SUID):当文件被用户使用时，程序会以文件属主的权限运行
2.设置组ID(SGID):对文件来说，程序会以文件属组的权限运行；对目录来说，目录中创建的新文件会以
目录的默认属组作为默认属组
3.粘着位：进程结束后文件还驻留(粘着)在内存中


SGID位对文件共享非常重要。启动SGI位后，你可以强制在一个共享目录下创建的新文件都属于该目录的属组，
这个组也就成为了每个用户的属组
SGID可通过chmod命令设置，它会加到标准3位八进制值之前(组成4位八进制值)，或在符号模式下用符号s

如果你用的是八进制模式，你需要知道这些位的位置

因此，要创建一个共享目录，是目录里的新文件都能沿用目录的属组，只需将该目录的SGID位置位

mkdir testdir 

chgrp sharing testdir

chmod g+s testdir

umask 002
touch testfile

ls -l

首先，用mkdir命令来创建希望共享的目录。然后通过chgrp命令将目录的默认属组改为包含所有需要共享文件
的用户的组(你必须是该组的成员)。最后，将目录的SGID位置位，以保证目录中新建文件都用sharing作为默认属组

为了让这个环境能正常工作，所有组成员都需把他们的umask值设置成文件读属组成员可写。
umask改为002，所有文件对属组是可写的

做完这些，组成员就能到共享目录下创建新文件了。新文件会沿用目录的属组，而不是用户的默认属组。现在sharing组的所有用户都能访问这个文件了。