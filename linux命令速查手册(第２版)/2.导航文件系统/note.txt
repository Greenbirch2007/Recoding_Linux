掌握命令之后，就可以开始控制shell，对文件，文件夹，数据和环境执行各种操作

还需要学习一些元数据


注意


mkdir -v  该命令显示mkdir实际执行的操作


２．１　　列出文件和文件夹

ls　会列出当前所操作目录的内容

２．２　　列出其他文件夹的内容

ls [folder]   不必进入某个目录即可查看其中内容

比如　　ls Music

这个实例是相对路径，但绝对路径也是同样有效

要查看某个目录的内容列表时，如果你不想每次都在文件系统的各个目录之间来回切换，那么能够
指定相对路径或绝对路径会带来很大便利

ls  ~/videos  （～代表你的主目录）
操作脚本或文件也可以这么操作，如下

sh ~/pycharm/bin/pycharm.sh

2.3  使用通配符列出文件夹的内容

ls *

前面介绍了如何通过列出目录的全部内容来查找文件：但有快捷的方法，特别是对于内容很多的目录

另外，可以私用通配符
ls ~/FUNS/*.py

注意，如果使用通配符导致匹配某个目录，则也会列出该目录的内容，如果要忽略匹配的目录并避免
显示子目录的内容，可以添加-d选项

２．４　　查看子文件夹中的文件列表

ls -R  还可以使用一条命令查看多个子文件夹的内容

除了采用ls -R之外，还可以使用ls --recursive
每个文件夹都以其路径作为开头，即相对于主目录的路径，后面跟一个冒号，接着是该文件夹中的内容
记住，如果有很多子目录且其中有很多内容，递归选项的作用就会较小，这是因为显示的清单会占用
多个屏幕，

２．５　　以单独一列显示内容列表

ls -1(是数字负１）

2.6  以逗号分隔列表显示内容

ls -m

2.7 查看隐藏的文件和文件夹

ls -a　(或--all)

所有这些文件和文件夹都在名称前有一个"."从而成为不可见的内容

注意
首选，ls -a可以同时显示隐藏和非隐藏内容
其次，始终可以看到"."和".."，因为"."代表当前目录，而".."则代表上一级目录，即当前目录的父目录

这两个隐藏文件在系统的每个文件夹中均存在，不能删除

最后，根据不同的目录，-a选项可能显示初已经没有注意到的大量隐藏文件

２．８　直观显示文件的类型

ls -F 这样可以用来区分，文件，目录，还是其他内容

注意，符号和对应的文件类型

字符　　　　　　　　　含义

*   可以执行文件
/   目录
@  符号链接文件
|   FIFO（也称为命名管道）
=   套接字


２．９　　以各种颜色显示内容

ls　--color  不同颜色对应不同的文件类型

颜色　　　　　　　　　　　　　　　　　文件
默认的shell文本颜色　　　　　　　普通文件
绿色　　　　　　　　　　　　可执行文件
蓝色　　　　　　　　　　　　　目录
紫红色　　　　　　　　　　　　　　符号链接文件
黄色　　　　　　　　　　　　　　　　FIFO
紫红色　　　　　　　　　　　　　套接字
红色　　　　　　　　　　　　　　压缩文件(.tar,.zip,.deb,.rpm)
紫红色　　　　　　　　　　　　　图像文件(.jpg,.gif,.png,.tiff)
紫红色　　　　　　　　　　　　　音频文件(.mp3,.ogg,.wav)


2.10 列出权限，所有者以及其他信息

ls -l(英文ｌ)(或--format=long)

-l 选项代表long,它提供了关于目录中所发现文件的大量数据，我们按照从右到左的顺序一次讨论
所看到的内容

（文件和目录实际权限）      (表示的数字) 文件的所有者   文件所属的组     文件大小(以字节为单位)   创建日期和时间 文件名

关注所有者左边的数字，如果正在研究文件，这个数字可以告诉你该有多少个硬链接。
如果它是目录，这个数字是指该目录中包含多少子目录，包括两个隐藏的目录: .(当前目录)和..(父目录)
这意味这即使其中没有任何子目录，你仍会看到数字２

如果需要修改权限　用到chown和chgrp

第一组表示这是什么类型的文件。权限字符和文件类型对比

字符　　　　　　　　　　含义
_(下划线)　　　　　　　普通文件
_(下划线)　　　　　　　可执行文件
d                　　目录
l（英文）　　　　　　　　符号链接文件
s                  套接字
b                   块设备
c                   字符设备
p                    命名管道(AKA FIFO）


接下来９个字符分别代表文件的所有者，文件的组以及系统中其他用户拥有的权限
r表示　”运行读取“
w表示　”允许改写“（修改或删除）
x表示　“允许执行”
-表示　　“不允许执行这个操作”

常见文件的权限 "rw-r--r--"
对于程序来说，通常会看到rwxr-xr-x这样的权限，这表示使用计算机的任何用户都可以读取和运行此程序，但是只有所有者
才能修改文件

对于ｒ(读取)
对于目录，r表示用户可以使用ls命令列出目录的内容
w表示用户可在目录中添加更多的文件，重命名已经存在的文件或删除不需要的文件
x对应与为了运行命令而访问目录的功能(需要访问和使用目录中的文件)，或是访问目录中的子目录

可以把-l与ａ结合起来使用

ls -la 详细展示所有文件


2.11　以倒序列出文件的内容

ls -r (因为默认是以字母顺序的，-r以相反的顺序来显示内容)

注意，这里使用的是-r而不是-R,-r表示倒序，而-R则表示递归


２．１２　　按日期和时间排序内容

ls -latr ~/  （最新的文件出现在最低层，便于查看


２．１３　　按文件大小排序内容

ls -S       

ls -laSr反转最大的文件


２．１４　　用K,M,G表示文件大小

ls -h  直接在输出列表中用KB(千字节),MB(兆字节),GB(吉字节)显示

注意，
在本人的~./bashrc文件中定义以下别买，可以简化操作



2.15  显示当前目录的路径

pwd 显示当前目录的完整绝对路径　
pwd -P 会改为返回软连接的目标目录

在使用pwd时，希望返回的是识记物理位置(目标目录)，而不是逻辑位置(源目录)
可以将-P改为默认值，，　　　alias pwd='pwd -P'


2.16 改为不同的目录
cd

2.17  改为home目录

cd ~

2.18  改为之前的目录
cd -  用户返回之前的目录，然后自动运行pwd


