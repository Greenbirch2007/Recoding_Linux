第３章　创建和销毁


３．１　　将文件改为当前时间

touch  只有获得文件写入权限才可以对文件使用touch命令，修改它的时间。否则touch 命令会运行失败

只需要运行基本的touch 命令，就可以同时更新文件或文件夹的访问和修改时间

３．２　　将文件改为任意所需的时间

touch -t

注意，并不仅限于修改当前的日期和时间。相反，只要使用这个选项和模式，就可以选择任意所需
的日期和时间: -t[[CC]YY]MMDDhhmm[.ss]

更改文件时间的模式


字符　　　　　　　　　　　　　　　　函数

CC                     4位年份数字中的前２位字符
YY		2位数字的年份:
                     如果是００～６８，则假设年份的前２位数字是２０
　　　　　　　　　　　　如果是６９～９９，则假设年份的前２位数字是１９
　　　　　　　　　　　　如果没有，则假设位当前年份

MM                   月份(01~12)
DD                   日期(01~31)
hh                   小时(01~23)
mm                   分钟(00~59)
ss                   秒钟(00~59)

如果想使用的数字不是普通的两位数，那么在前面加上０很重要，否则时间模式将不起作用

３．３　　新建空文件

touch 文件名　使用指定的文件名来生成一个空文件
３．４　新建目录

mkdir 目录名

注意
在大多数系统中，使用mkdir命令创建的新目录会赋予所有者权限，写入以及执行的权限
而只赋予组以及其他用户读取和执行的权限，要想更改这些设置，要用到chmod命令

如果要创建的目录已经存在，命令执行就会失败，系统返回一条警告信息

３．５　　创建新目录以及必要的子目录

mkdir -p 　可以简化创建嵌套子目录的过程(顺带把中途目录也都创建好了)

３．６　　复制文件

cp　用于复制文件和目录。
cp  要复制的文件名　　新的文件名
cp   源文件　　　　　　目标文件

注意，可以将文件复制到与源文件相同的目录中。也可以将文件复制到另一个目录中，甚至
可以从非当前工作目录复制到文件系统的其他任何目录中
要将这个文件完全复制到另外一个目录中。但是在cp的目标文件，必须使用新的文件名
因为这是在将文件复制到同一个目录中
如果要将其他目录中的文件复制到当前工作目录(目前所在的目录)，只需要使用.(点标记)
.表示当前目录，此时就不能更改文件名，它是原始文件名的快捷方式
如果直接将目标文件复制到制定的目录中，则不需要指定目标文件的文件名；相反，可以只提供目录名


３．７　　使用通配符复制文件

cp *

使用通配符一次性将多个文件复制到目录中。如果可以仔细地命名文件，那么该方法将非常节省四件，因为
现在可以准确地制定一组文件

可以使用的通配符并不限于”*“;还可以使用方括号([]),通过匹配"["和"]"之间的任意字符来
更准确地指明要复制哪些文件、


３．８　　显示复制文件的过程

cp -v 

3.9 防止在复制时覆盖重要文

cp -i

如果尝试使用-i选项再次复制相同的文件，将会得到不同的结果

注意，
对于普通用户来说，通常不需要使用=i选项，然而，对于root用户来说，很重要


３．１０　　复制目录

cp -r

３．１１　　为建立完善副本二将文件复制到另一个目录

cp -a
这是用来备份数据使用的/该选项可确保cp命令不会复制软链接的内容(这可能极大地增加复制量)
而只保存关键的文件属性(如所有者，时间戳)，并递归处理子目录


３．１２　　移动文件和文件夹

mv  该命令的作用就是将文件系统上的文件从一个位置移动到另一个位置

与使用cp命令一样，如果不希望重复输入文件名，那么可以使用点好"."表示当前目录

如果要将文件移动到另一个目录并保持文件名不变，则只需制定目录，目录文件名将会保持不变

mv -v 选项可以在复制和移动文件时显示执行过程，
mv -i 选项在复制和移动文件时交互式提示是否覆盖已有文件


３．１３　　重命名文件和文件夹

mv  如果移动文件，就必须位其提供一个目标名称。没有规则规定目标名称必须与源文件名相同
，因此shell用户从一开始就依赖mv命令来重命名文件和目录

mv  旧的目录名/   新的目录名/

mv比cp更加轻量级，它不会创建新文件，也不会将文件重新安排到磁盘上的新位置
该命令所做的工作就是改变所指定的单个文件或目录的名称

警告

如果移动一个指向目录的软连接诶，就需要特别注意输入的内容
在软链接的末端是否加上一个正斜杠('/')。如果没有正斜杠，移动的就是软链接本身
，而且只移动这个链接；有了正斜杠，移动的将是软链接设计指向的目录，而不是软链接本身

３．１４　　理解linux存储文件的方式

一切都是文件，是什么使得某个文件成为文件呢？实际的情况是，我们所看到的文件是指向
索引节点的指针：这是一种数据结构，其中存储有关物理数据在计算机上的具体位置的信息，
还存储了与数据有关的元数据，如文件类型，大小，修改时间，所有权　，权限等。
在创建文件时，文件系统会为其分配一个独特的索引节点号，而用户会为其分配一个名称，这两者
都存储在驱动器上的索引节点表中。可通过其名称引用某个文件，linux会使用该名称查询
关联的索引节点。linux获取存储在索引节点中的信息之后，就可以对该文件进行操作
如果要查看与文件关联的索引节点号，可以使用　ls -i'

看到文件和目录左边的编号了吗？这些就是索引节点号。目录也有索引节点号，其中提到目录实际
上也是文件，是包含有关其他文件信息的特殊类型文件。现在你就可以知道，目录或文件夹也是
一个文件(有着自己的索引节点)，该文件将其内部的文件与对应的索引节点关联起来

大多数文件系统都会创建固定数量的索引节点，从理论上来说，如果索引节点已经用完，那么
即使有大量的磁盘空间，也无法创建更多文件
如果你想知道文件系统拥有的索引节点数以及剩余的可用索引节点数，可以使用df命令，
但是要使用-h(便于用户阅读)和-i

df -h

3.15  创建指向另一个文件或目录的链接

ln  有时最好同时在两个或更多的位置存放同一个文件，或采用多种方式应用某个文件或目录，

目前存在两种链接：硬链接(默认链接类型)和软链接(可能经常使用的链接类型)。
了解索引节点以及它如此重要的原因，接下来查看硬链接的一些特性。
可使用"ln 原始文件　　链接名"　这样的命令创建硬链接

使用ln命令，该命令的后面首先要链接的文件，之后要跟硬链接名。
请注意，当再次运行ls -l命令是，文件和硬链接的大小将完全相同
第一次执行ls命令时，文件的对应编号为１，而在第二次执行命令时，该编号改为２
编号改变的原因在于其显示了该文件有多少硬链接(此编号与目录和索引节点没有任何关系
目录的编号表明其下有多少个目录)
１表示文件存在，因为文件及其索引节点之间至少有一个链接。
创建新的硬链接时，编号会递增１；而在删除硬链接时，编号就会递减１．实际上，这就是
rm命令发挥作用的地方，
rm命令割断文件及其索引节点之间的链接：在编号数降为１时，对该文件执行rm命令就可最终将其删除

注意：
移除链接的另一种方式是使用unlink命令：unlink mody_dick,txt
echo　命令（它回显所输入的内容），然后重定向输出到硬链接white_whale.txt
对两个文件执行cat命令，有着相同的内容，这再次证明它们实际上是同一个文件。
还要注意，如果使用mv命令重命名源文件，链接仍然有效。原因在于索引节点没有改变，它指向磁盘上的相同数据。如果使用mv命令将文件实际得移动到新位置，链接再次保持有效，并显示相同的内容。
硬链接虽然功能强大，但也有着不少限制。重要的限制之一是无论如何都无法建立指向目录的硬链接（此处可以为软链接）另一个限制是硬链接和源文件必须处于同一个文件系统，因此不能将文件放在一个分区上，而将硬链接放在不同的分区上(每个分区都有自己的索引节点)。如果尝试这样操作，系统就会给出"无效的跨设备链接"错误信息

软链接，为了创建软链接(也称为符号链接)，可使用前面的语法，但要添加-s选项，例如ln -s源文件链接名称。先查看如下的服务器，接下来会解释其中的含义
ls -l /

这是服务器root目录的部分清单，其中正好包含４个软链接：mb,shared,webconf和www
不会使用ssh登录服务器，然后输入cd　/var/www这样的命令。因此，我们创建了名为www的软链接，它指向此目录。
我们可以通过多种方式建立此软链接，如下
sudo ln -s /var/www /www

上面的示例，使用绝对路径在/www中创建一个软链接，该软连接指向/var/www（再次使用sudo是因为普通用户不会在/中创建链接或其他对象）。此方法的优点是可以在系统上的任意位置创建此链接，因为其中使用了绝对路径，但是也可以如下

cd /
sudo ln -s /var/www  .

上面的示例中，使用cd命令进入要创建软链接的目录，然后进行创建，但没有使用链接名称，而是用了.(句点)，这就告诉ln,我们希望链接名与所要链接的文件或文件夹名相同。在此示例中，软链接的名称将是www,因为这是源路径中最末端的对象名称


cd /
sudo ln -s /var/www

在上面的示例中，使用cd命令进入要创建软链接的目录，然后进行创建，但　没有使用链接名称，也没有输入任何内容。这实际上是告诉ln,我们希望链接名与所要链接的文件或文件夹名相同。在此示例中，与前一个示例类似，软链接同样是www,因为这是源路径中的最后一个组成部分。这是取巧的

无论哪种方式创建的软链接，其工作方式都与所链接的文件或文件夹类似

创建的第一个软链接指向一个目录，在使用cd命令进入此软链接时，实际上是最终来到了所指向的目录。接下来，对指向文件的软链接执行cat命令，就可以看到所指向文件的内容。如果在编辑器中打开此软链接，就可以更改源文件的内容

现在你已经知道如何创建软链接以及它们的工作方式，但是如何区分软链接和硬链接？
首先查看ls命令的结果，在此假设所查看的目录同时包含硬链接和软链接

首先看一下使用ls -l命令的结果。如果是软链接，则第一个列显示l(链接的简写)；但是如果是硬链接，则显示-（表示是“普通”文件）。这是因为对于你的文件系统来说，硬链接仅仅是共享索引节点的普通文件。另一件应该注意到的事情是，ls -l会显示一个指针，该指针指向软链接定向到的文件或文件夹，这就非常方便。对于硬链接来说，此命令没有任何意义，因为源文件和指向该文件的硬链接实际上是同一个对象。就操作系统而言，它们是等同的，“源”和指向它的其他链接没有任何区别。此外，一个软链接仅仅可以指向一个文件或文件夹，而同一个文件可以有许多硬链接，但这样会引起混乱，因此不应该尝试创建多个硬链接

第二个命令ls -i也显示了硬链接和软链接之间的一些关键区别。当然，硬链接有相同的索引节点号，而软链接和它们指向的文件有不同的编号，因为它们是完全不同的文件。与作为完全相同文件的硬链接不同，软链接使用名称指向文件和目录，并且采用该名称的文件有着自己的索引节点。换句话，软链接有自己的索引节点，而该节点指向源文件的索引节点，后者则指向硬盘上的实际数据！
还有其他一些区别：重要的区别之一是软链接可指向文件或文件夹，而硬链接仅仅可以指向文件。与硬链接不同，软链接及其指向的文件不需要在同一个文件系统中。如果移动或删除源文件，软链接就会断开，但始终可以更改软链接的名称而不会出现任何问题
硬链接和软链接

类型　　　　　　　　　　　　硬链接　　　　　　　　　　　软链接
链接指向　　　　　　　　　　索引节点　　　　　　　　　　名称
链接到目录　　　　　　　　　否　　　　　　　　　　　　　是
跨文件系统链接　　　　　　　否　　　　　　　　　　　　　是
移动源文件　　　　　　　　　链接有效　　　　　　　　　　链接断开
更改目标的名称　　　　　　　链接有效　　　　　　　　　　链接断开
删除链接　　　　　　　　　　目标仍然存在　　　　　　　　目标仍然存在
链接的索引节点　　　　　　　与目标相同　　　　　　　　　与目标不同
存储空间　　　　　　　　　　无　　　　　　　　　　　　　　～4kb

除非是最后一个删除的链接，或运行进程已打开文件

硬链接和软链接都有其用户，在需要时都可发挥重要的左右


３．１６　　删除文件

rm  用于删除文件。该命令会彻底地从磁盘上删除文件，文件将不复存在

保持谨慎是很有必要的，因为shell缺少一个恢复已删除文件的命令。但是，如果错误地删除了文件
也不是完全没有方法恢复。如果在意识到操作错误时立马停止使用计算机，如果操作系统还没有重写被删除文件所占用的扇区，再加上如果能够成功地使用某些相当复杂的文件恢复软件。
提示

很多人都在尝试为rm命令提供某种安全措施，涉及将rm命令重新映射或替换为一个临时的"垃圾箱”
或创建一个新的命令(trash)来取代rm.
另一方面，如果要确保绝对没有人能够恢复删除的文件，即便是黑客也不行
那么请使用shred命令来代替rm命令。
shred命令会重写文件多达２５次(可使用-n#选项调整次数)，因此不可能恢复被删除的文件，但是在使用shred命令之前应该阅读一下其手册页，因为它的执行成功率在很大程度上依赖于正在使用的文件系统类型

３．１７　使用通配符一次性删除多个文件

rm *
注意，
rm *txt 而不是rm * txt（后者会删除所有文件）

３．１８　　防止删除关键文件

rm -i 可以提供一个安全措施。在删除每个文件之前，它会先要求你确认删除。当作为root用户运行时，这个非常有用，实际上，许多系统管理员都因此默认设置rm为rm -i

当rm命令询问如何操作时，y表示同意删除文件，n表示忽略这个文件，并继续处理下一个文件

3.19  删除空目录

rmdir  它是转么用来删除空目录的

３．２０　　删除文件或非空的目录

rm -rf
删除带有文件的目录还可以：结合使用-r和-f选项。
-r 选项告诉rm命令深入到其发现的每个子目录中并删除其中的所有文件
 -f　选项告诉rm命令直接完成删除操作，不要为细节问题(比如文件夹非空)

这是一个删除目录及其中所有文件和子目录的稳妥方法

警告

rm -rf命令有可能损坏你的重要文件和系统，在使用该命令前要反复检查要删除的数据

经典的linux警告，以root用户身份登录时，不要输入rm -rf/*命令，这样会删除整个系统，

一般来说，请谨慎在rm -rf 命令中使用通配符。
rm -rf libby* 和　rm -rf libby * 之前有很大的区别。前者会删除工作目录中以libby开头的所有数据；而后者会删除任何名称是libby的文件或文件夹，然后删除目录中的所有其他数据

一个建议：永远不要输入rm -rf,*/*来删除以.为名称开头的目录，因为这也会匹配..，最终将删除当前工作目录的上级目录中的所有数据

３．２１　　删除难缠的文件

明确rm与系统中特定文件的一些关联：
首先，无论如何尝试，你都不可能删除目录.和..,因为它们是保持文件系统层次结构稳定所需的目录。此外，我们完全没有理由删除它们

（１）如何删除名称中带有空格的文件？调用rm命令的普通方法无效，这时只需啊哟将文件的名称用引号括起来既可以了
（２）　如何删除名称-开头的文件？这时有两种解决方案：可以在有问题的文件名称前面加上"--"，告诉rm命令：跟在其后的任何自由都不应该被视为选项，而是文件或文件夹的名称
此外，还可以使用.作为路径名的一部分，这样可以在'-'字符干扰rm命令，让其以为文件名是实际选项之前就避免这个问题
如　　　rm ./-88.txt



